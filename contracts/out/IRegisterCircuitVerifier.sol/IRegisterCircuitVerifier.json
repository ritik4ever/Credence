{"abi":[{"type":"function","name":"verifyProof","inputs":[{"name":"a","type":"uint256[2]","internalType":"uint256[2]"},{"name":"b","type":"uint256[2][2]","internalType":"uint256[2][2]"},{"name":"c","type":"uint256[2]","internalType":"uint256[2]"},{"name":"pubSignals","type":"uint256[3]","internalType":"uint256[3]"}],"outputs":[{"name":"isValid","type":"bool","internalType":"bool"}],"stateMutability":"view"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"verifyProof(uint256[2],uint256[2][2],uint256[2],uint256[3])":"11479fea"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256[2]\",\"name\":\"a\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2][2]\",\"name\":\"b\",\"type\":\"uint256[2][2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"c\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[3]\",\"name\":\"pubSignals\",\"type\":\"uint256[3]\"}],\"name\":\"verifyProof\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"verifyProof(uint256[2],uint256[2][2],uint256[2],uint256[3])\":{\"details\":\"This function checks the validity of the provided proof parameters.\",\"params\":{\"a\":\"The 'a' component of the proof.\",\"b\":\"The 'b' component of the proof.\",\"c\":\"The 'c' component of the proof.\",\"pubSignals\":\"The public signals associated with the proof.\"},\"returns\":{\"isValid\":\"A boolean value indicating whether the provided proof is valid (true) or not (false).\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"verifyProof(uint256[2],uint256[2][2],uint256[2],uint256[3])\":{\"notice\":\"Verifies a given register circuit proof.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/self/contracts/contracts/interfaces/IRegisterCircuitVerifier.sol\":\"IRegisterCircuitVerifier\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@selfxyz/contracts/=lib/self/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":self/=lib/self/\"],\"viaIR\":true},\"sources\":{\"lib/self/contracts/contracts/interfaces/IRegisterCircuitVerifier.sol\":{\"keccak256\":\"0x79cc50c0de8294f79811e2a878fe07a3f4ac83ed135a10af8c974a89615b7f3b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5f3b3e5ec9dbbcd0a15621a33abb363875d1ecf3e46fb2d8371cc332d0f5992\",\"dweb:/ipfs/Qmb15d6ktr9tMiw9o3p79Cugws549MZArS5DCUsvTDkpTn\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.28+commit.7893614a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint256[2]","name":"a","type":"uint256[2]"},{"internalType":"uint256[2][2]","name":"b","type":"uint256[2][2]"},{"internalType":"uint256[2]","name":"c","type":"uint256[2]"},{"internalType":"uint256[3]","name":"pubSignals","type":"uint256[3]"}],"stateMutability":"view","type":"function","name":"verifyProof","outputs":[{"internalType":"bool","name":"isValid","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{"verifyProof(uint256[2],uint256[2][2],uint256[2],uint256[3])":{"details":"This function checks the validity of the provided proof parameters.","params":{"a":"The 'a' component of the proof.","b":"The 'b' component of the proof.","c":"The 'c' component of the proof.","pubSignals":"The public signals associated with the proof."},"returns":{"isValid":"A boolean value indicating whether the provided proof is valid (true) or not (false)."}}},"version":1},"userdoc":{"kind":"user","methods":{"verifyProof(uint256[2],uint256[2][2],uint256[2],uint256[3])":{"notice":"Verifies a given register circuit proof."}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@selfxyz/contracts/=lib/self/contracts/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","self/=lib/self/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/self/contracts/contracts/interfaces/IRegisterCircuitVerifier.sol":"IRegisterCircuitVerifier"},"evmVersion":"prague","libraries":{},"viaIR":true},"sources":{"lib/self/contracts/contracts/interfaces/IRegisterCircuitVerifier.sol":{"keccak256":"0x79cc50c0de8294f79811e2a878fe07a3f4ac83ed135a10af8c974a89615b7f3b","urls":["bzz-raw://c5f3b3e5ec9dbbcd0a15621a33abb363875d1ecf3e46fb2d8371cc332d0f5992","dweb:/ipfs/Qmb15d6ktr9tMiw9o3p79Cugws549MZArS5DCUsvTDkpTn"],"license":"MIT"}},"version":1},"id":8}