{"abi":[{"type":"function","name":"onVerificationSuccess","inputs":[{"name":"output","type":"bytes","internalType":"bytes"},{"name":"userData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"verifySelfProof","inputs":[{"name":"proofPayload","type":"bytes","internalType":"bytes"},{"name":"userContextData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"onVerificationSuccess(bytes,bytes)":"8d2d8d6a","verifySelfProof(bytes,bytes)":"d161802b"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"output\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"onVerificationSuccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"proofPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"userContextData\",\"type\":\"bytes\"}],\"name\":\"verifySelfProof\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides base functionality for verifying and disclosing identity credentials\",\"kind\":\"dev\",\"methods\":{\"onVerificationSuccess(bytes,bytes)\":{\"details\":\"Only the identity verification hub V2 contract should call this function\",\"params\":{\"output\":\"The verification output data containing disclosed identity information\",\"userData\":\"The user-defined data passed through the verification process\"}},\"verifySelfProof(bytes,bytes)\":{\"details\":\"Parses relayer data format and validates against contract settings before calling hub V2\",\"params\":{\"proofPayload\":\"Packed data from relayer in format: | 32 bytes attestationId | proof data |\",\"userContextData\":\"User-defined data in format: | 32 bytes configId | 32 bytes destChainId | 32 bytes userIdentifier | data |\"}}},\"title\":\"ISelfVerificationRoot\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"onVerificationSuccess(bytes,bytes)\":{\"notice\":\"Callback function called upon successful verification\"},\"verifySelfProof(bytes,bytes)\":{\"notice\":\"Verifies a self-proof using the bytes-based interface\"}},\"notice\":\"Interface for self-verification infrastructure integration\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/self/contracts/contracts/interfaces/ISelfVerificationRoot.sol\":\"ISelfVerificationRoot\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@selfxyz/contracts/=lib/self/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":self/=lib/self/\"],\"viaIR\":true},\"sources\":{\"lib/self/contracts/contracts/interfaces/ISelfVerificationRoot.sol\":{\"keccak256\":\"0x6728f20379d83a0e80c684a037a1f576044f7c7fff6a88e2adc2c631224be78f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dec4fddb761d0e4ead28223ffa410d773c117a82d5bf5413f0ac2b79e91730f8\",\"dweb:/ipfs/QmXaQx7JWEq5ZPJFsXeMNBVPjewdcXDF566JYayHHBqd5Y\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.28+commit.7893614a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"bytes","name":"output","type":"bytes"},{"internalType":"bytes","name":"userData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"onVerificationSuccess"},{"inputs":[{"internalType":"bytes","name":"proofPayload","type":"bytes"},{"internalType":"bytes","name":"userContextData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"verifySelfProof"}],"devdoc":{"kind":"dev","methods":{"onVerificationSuccess(bytes,bytes)":{"details":"Only the identity verification hub V2 contract should call this function","params":{"output":"The verification output data containing disclosed identity information","userData":"The user-defined data passed through the verification process"}},"verifySelfProof(bytes,bytes)":{"details":"Parses relayer data format and validates against contract settings before calling hub V2","params":{"proofPayload":"Packed data from relayer in format: | 32 bytes attestationId | proof data |","userContextData":"User-defined data in format: | 32 bytes configId | 32 bytes destChainId | 32 bytes userIdentifier | data |"}}},"version":1},"userdoc":{"kind":"user","methods":{"onVerificationSuccess(bytes,bytes)":{"notice":"Callback function called upon successful verification"},"verifySelfProof(bytes,bytes)":{"notice":"Verifies a self-proof using the bytes-based interface"}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@selfxyz/contracts/=lib/self/contracts/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","self/=lib/self/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/self/contracts/contracts/interfaces/ISelfVerificationRoot.sol":"ISelfVerificationRoot"},"evmVersion":"prague","libraries":{},"viaIR":true},"sources":{"lib/self/contracts/contracts/interfaces/ISelfVerificationRoot.sol":{"keccak256":"0x6728f20379d83a0e80c684a037a1f576044f7c7fff6a88e2adc2c631224be78f","urls":["bzz-raw://dec4fddb761d0e4ead28223ffa410d773c117a82d5bf5413f0ac2b79e91730f8","dweb:/ipfs/QmXaQx7JWEq5ZPJFsXeMNBVPjewdcXDF566JYayHHBqd5Y"],"license":"MIT"}},"version":1},"id":9}